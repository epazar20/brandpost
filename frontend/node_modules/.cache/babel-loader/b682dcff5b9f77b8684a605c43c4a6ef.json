{"ast":null,"code":"var _jsxFileName = \"/Users/epazar/Documents/workspace/UI/frontend/src/component/ProfileCard.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { updateUser } from '../api/ApiCalls';\nimport defaultImage from '../assets/profile.png';\nimport { useApiProgress } from '../common/ApiProgress';\nimport ButtonWithLoading from './ButtonWithLoading';\nimport Input from './Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfileCard = props => {\n  _s();\n\n  // const context = useContext(Authentication);\n  // const {state} = context as any ;\n  // const { username } = state;\n  const [editMode, setEditMode] = useState(false);\n  const routerParams = useParams();\n  const userPath = routerParams.username;\n  const {\n    t\n  } = useTranslation();\n  const [users, setUsers] = useState({});\n  const {\n    username,\n    displayname,\n    image\n  } = users;\n  const [updatedName, setUpdatedName] = useState(displayname);\n  let defaultImg = image ? image : defaultImage;\n  const pendingApiCall = useApiProgress(\"put\", `/api/1.0/users/${username}`);\n  useEffect(() => {\n    setUsers({ ...props.user\n    });\n  }, [props.user]); // let message = \"YOU CONNOT EDIT\";\n  // if (userPath === username) {\n  //     message = \"YOU CAN EDIT\";\n  // }\n\n  const onSaveClick = () => {\n    try {\n      updateUser(userPath, {\n        displayname: updatedName\n      }).then(response => {\n        debugger;\n        setUsers(response.data);\n        debugger;\n        setEditMode(false);\n      });\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    if (editMode) setUpdatedName(displayname);else setUpdatedName(undefined);\n  }, [editMode, displayname]);\n  const {\n    loginname\n  } = useSelector(store => {\n    return {\n      loginname: store.username\n    };\n  });\n  const editable = userPath === loginname;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: defaultImg,\n        alt: \"profil\",\n        width: 200,\n        className: \"rounded-circle shadow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [editMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          label: t(\"Change Display Name\"),\n          defaultValue: displayname,\n          onChange: event => {\n            setUpdatedName(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ButtonWithLoading, {\n          className: \"btn btn-primary d-inline-flex mt-2\",\n          onClick: onSaveClick,\n          pendingApiCall: pendingApiCall,\n          text: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"iconify mt-1 me-1\",\n              \"data-icon\": \"mdi:content-save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), t(\"Save\")]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary d-inline-flex mt-2 ms-2\",\n          onClick: () => {\n            setEditMode(false);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"iconify mt-1 me-1\",\n            \"data-icon\": \"mdi:close-thick\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), t(\"Cancel\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), !editMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: displayname + \" - \" + username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), editable && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary d-inline-flex\",\n          onClick: () => {\n            setEditMode(true);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"iconify mt-1 me-1\",\n            \"data-icon\": \"mdi:pencil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), t(\"Edit\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfileCard, \"efLfRP731WcZ0mtmH7R872glDWA=\", false, function () {\n  return [useParams, useTranslation, useApiProgress, useSelector];\n});\n\n_c = ProfileCard;\nexport default ProfileCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileCard\");","map":{"version":3,"names":["useEffect","useState","useTranslation","useSelector","useParams","updateUser","defaultImage","useApiProgress","ButtonWithLoading","Input","ProfileCard","props","editMode","setEditMode","routerParams","userPath","username","t","users","setUsers","displayname","image","updatedName","setUpdatedName","defaultImg","pendingApiCall","user","onSaveClick","then","response","data","error","undefined","loginname","store","editable","event","target","value"],"sources":["/Users/epazar/Documents/workspace/UI/frontend/src/component/ProfileCard.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { updateUser } from '../api/ApiCalls';\nimport defaultImage from '../assets/profile.png'\nimport { useApiProgress } from '../common/ApiProgress';\nimport ButtonWithLoading from './ButtonWithLoading';\nimport Input from './Input';\n\nconst ProfileCard = (props: any) => {\n\n    // const context = useContext(Authentication);\n    // const {state} = context as any ;\n    // const { username } = state;\n    const [editMode, setEditMode] = useState(false);\n    const routerParams = useParams();\n    const userPath: string = (routerParams as any).username;\n    const { t } = useTranslation();\n    const [users, setUsers] = useState({});\n    const { username, displayname, image } = users as any;\n\n    const [updatedName, setUpdatedName] = useState(displayname);\n    let defaultImg = image ? image : defaultImage;\n    const pendingApiCall = useApiProgress(\"put\", `/api/1.0/users/${username}`);\n\n    useEffect(() => {\n        setUsers({ ...props.user });\n    }, [props.user]);\n\n    // let message = \"YOU CONNOT EDIT\";\n    // if (userPath === username) {\n    //     message = \"YOU CAN EDIT\";\n    // }\n\n    const onSaveClick = () => {\n        try {\n            updateUser(userPath, { displayname: updatedName }).then(response => {\n                debugger;\n                setUsers(response.data);\n                debugger;\n                setEditMode(false);\n\n            });\n        } catch (error) {\n\n        }\n\n    }\n\n    useEffect(() => {\n        if (editMode) setUpdatedName(displayname);\n        else setUpdatedName(undefined);\n\n    }, [editMode, displayname]);\n\n    const {loginname} = useSelector((store:any)=>{\n        return {loginname : store.username}\n    })\n    const editable =userPath === loginname;\n\n    return (\n        <div className='card text-center'>\n            <div className='card-header'>\n                <img src={defaultImg} alt='profil' width={200} className=\"rounded-circle shadow\" />\n            </div>\n            <div className='card-body'>\n\n                {editMode && (\n                    <>\n                        <Input label={t(\"Change Display Name\")} defaultValue={displayname} onChange={(event: any) => { setUpdatedName(event.target.value) }} />\n                        <ButtonWithLoading className='btn btn-primary d-inline-flex mt-2' onClick={onSaveClick} pendingApiCall={pendingApiCall}\n                        text={\n                            <>\n                                <span className=\"iconify mt-1 me-1\" data-icon=\"mdi:content-save\"></span>\n                                {t(\"Save\")}\n                            </>\n                        }>\n                        </ButtonWithLoading>\n                        <button className='btn btn-secondary d-inline-flex mt-2 ms-2' onClick={() => { setEditMode(false) }}>\n                            <span className=\"iconify mt-1 me-1\" data-icon=\"mdi:close-thick\"></span>{t(\"Cancel\")}</button>\n                    </>\n                )}\n                {!editMode && (<>\n                    <h4>{displayname + \" - \" + username}</h4>\n                    { editable &&  <button className='btn btn-primary d-inline-flex' onClick={() => { setEditMode(true) }}>\n                        <span className=\"iconify mt-1 me-1\" data-icon=\"mdi:pencil\">\n                        </span>\n                        {t(\"Edit\")}</button>}\n                </>)}\n\n            </div>\n        </div>\n    );\n};\n\nexport default ProfileCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}