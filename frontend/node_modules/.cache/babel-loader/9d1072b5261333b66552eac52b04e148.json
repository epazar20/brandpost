{"ast":null,"code":"var _jsxFileName = \"/Users/epazar/Documents/workspace/UI/frontend/src/component/TopBar.tsx\",\n    _s = $RefreshSig$();\n\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/logo.png';\nimport { logoutAction } from '../redux/authAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TopBar = props => {\n  _s();\n\n  //static contextType: React.Context<any> = Authentication;\n  // const context = useContext(Authentication);\n  // const {state,onLogOut:onLogOutSuccess} = context as any ;\n  // const { isLoggedIn, username } = state;\n  const {\n    t\n  } = useTranslation();\n  const {\n    isLoggedIn,\n    username\n  } = useSelector(store => {\n    return {\n      isLoggedIn: store.isLoggedIn,\n      username: store.username\n    };\n  });\n  const dispatch = useDispatch();\n\n  const onLogOutSuccess = () => {\n    dispatch(logoutAction());\n  };\n\n  let link = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collapse navbar-collapse\",\n    id: \"navbarNavAltMarkup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-nav\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"navbar-nav float-end me-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item active\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"nav-link\",\n            to: \"/login\",\n            children: t(\"Login\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"nav-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"nav-link\",\n            to: \"/signup\",\n            children: t(\"Sign Up\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 17\n  }, this);\n\n  if (isLoggedIn) {\n    link = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collapse navbar-collapse\",\n      id: \"navbarNavAltMarkup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-nav\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"navbar-nav float-end me-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"nav-link\",\n              to: `/user/${username}`,\n              children: username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item active\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"nav-link\",\n              to: \"/\",\n              onClick: onLogOutSuccess,\n              children: t(\"Logout\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar navbar-expand navbar-light bg-light\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"navbar-brand\",\n      to: \"/\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\",\n        width: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), \"PazarFy\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), link]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TopBar, \"ZDOJZfdq0eJ5G1+wy1uK9W0E2xk=\", false, function () {\n  return [useTranslation, useSelector, useDispatch];\n});\n\n_c = TopBar;\nexport default TopBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopBar\");","map":{"version":3,"names":["useTranslation","useDispatch","useSelector","Link","logo","logoutAction","TopBar","props","t","isLoggedIn","username","store","dispatch","onLogOutSuccess","link"],"sources":["/Users/epazar/Documents/workspace/UI/frontend/src/component/TopBar.tsx"],"sourcesContent":["import { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/logo.png'\nimport { logoutAction } from '../redux/authAction';\n\nconst TopBar = (props: any) => {\n\n    //static contextType: React.Context<any> = Authentication;\n    // const context = useContext(Authentication);\n    // const {state,onLogOut:onLogOutSuccess} = context as any ;\n    // const { isLoggedIn, username } = state;\n\n    const { t } = useTranslation();\n    const { isLoggedIn, username } = useSelector((store: any) => {\n        return {\n            isLoggedIn: store.isLoggedIn,\n            username: store.username\n        }\n    });\n    const dispatch = useDispatch();\n    const onLogOutSuccess = () => {\n        dispatch(logoutAction())\n    }\n\n\n    let link = (<div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div className=\"navbar-nav\">\n            <ul className=\"navbar-nav float-end me-auto\">\n                <li className=\"nav-item active\">\n                    <Link className=\"nav-link\" to=\"/login\">{t(\"Login\")}</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/signup\">{t(\"Sign Up\")}</Link>\n                </li>\n            </ul>\n        </div>\n    </div>)\n\n\n    if (isLoggedIn) {\n\n        link = (<div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n            <div className=\"navbar-nav\">\n                <ul className=\"navbar-nav float-end me-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to={`/user/${username}`}>{username}</Link>\n                    </li>\n                    <li className=\"nav-item active\">\n                        <Link className=\"nav-link\" to=\"/\" onClick={onLogOutSuccess}  >{t(\"Logout\")}</Link>\n                    </li>\n\n                </ul>\n            </div>\n        </div>)\n\n    }\n\n\n    return (\n        <nav className=\"navbar navbar-expand navbar-light bg-light\">\n            <Link className='navbar-brand' to={\"/\"}>\n                <img src={logo} alt=\"logo\" width={100} />PazarFy\n            </Link>\n            {link}\n        </nav>\n\n    );\n\n}\n\nexport default TopBar;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}