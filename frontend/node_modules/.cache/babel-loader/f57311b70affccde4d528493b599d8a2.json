{"ast":null,"code":"var _jsxFileName = \"/Users/epazar/Documents/workspace/UI/frontend/src/pages/LoginPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useTranslation } from \"react-i18next\";\nimport Input from \"../component/Input\";\nimport { useEffect, useState } from \"react\";\nimport ButtonWithLoading from \"../component/ButtonWithLoading\";\nimport { useApiProgress } from \"../common/ApiProgress\";\nimport { useDispatch } from \"react-redux\";\nimport { loginHandleAction } from \"../redux/authAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = props => {\n  _s();\n\n  //static contextType: React.Context<any> = Authentication;\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [error, setError] = useState();\n  const pendingApiCall = useApiProgress(\"/api/1.0/auth\");\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setError(undefined);\n  }, [username, password]);\n\n  const onClick = async event => {\n    event.preventDefault();\n    setError(undefined);\n    const {\n      history\n    } = props;\n    const cred = {\n      username,\n      password\n    };\n\n    try {\n      const res = await dispatch(loginHandleAction(cred));\n      debugger;\n      history.push(\"/\");\n    } catch (err) {\n      debugger;\n      console.log(err);\n      setError(err.response.data.message);\n    }\n  };\n\n  const disableLogin = !(username && password) || pendingApiCall;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: t(\"Login\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        name: \"username\",\n        label: t(\"Username\"),\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"password\",\n        label: t(\"Password\"),\n        onChange: event => setPassword(event.target.value),\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonWithLoading, {\n        onClick: onClick,\n        disabled: disableLogin,\n        text: t(\"Login\"),\n        pendingApiCall: pendingApiCall,\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginPage, \"AoWAIjyHky4agHxT/whxIo69+YU=\", false, function () {\n  return [useApiProgress, useTranslation, useDispatch];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useTranslation","Input","useEffect","useState","ButtonWithLoading","useApiProgress","useDispatch","loginHandleAction","LoginPage","props","username","setUsername","password","setPassword","error","setError","pendingApiCall","t","dispatch","undefined","onClick","event","preventDefault","history","cred","res","push","err","console","log","response","data","message","disableLogin","target","value"],"sources":["/Users/epazar/Documents/workspace/UI/frontend/src/pages/LoginPage.tsx"],"sourcesContent":["import { useTranslation } from \"react-i18next\";\nimport Input from \"../component/Input\";\nimport { useEffect, useState } from \"react\";\nimport ButtonWithLoading from \"../component/ButtonWithLoading\";\nimport { useApiProgress } from \"../common/ApiProgress\";\nimport { useDispatch } from \"react-redux\";\nimport { loginHandleAction } from \"../redux/authAction\";\n\nconst LoginPage = (props: any) => {\n\n    //static contextType: React.Context<any> = Authentication;\n    const [username,setUsername] = useState();\n    const [password,setPassword] = useState();\n    const [error,setError]=useState();\n    const pendingApiCall = useApiProgress(\"/api/1.0/auth\")\n    const {t} = useTranslation();\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        setError(undefined);\n    },[username,password]);\n\n\n    const onClick = async (event: any) => {\n        event.preventDefault();\n        setError(undefined);\n        const { history } = props as any;\n        const cred = {\n            username,\n            password\n        }\n        try {\n            const res = await dispatch(loginHandleAction(cred) as any); \n            debugger;\n            history.push(\"/\");\n\n        } catch (err: any) {\n            debugger;\n            console.log(err);\n            setError(err.response.data.message);\n        }\n    }\n\n    const disableLogin = !(username && password) || pendingApiCall;\n\n    return (\n        <div className=\"container\">\n            <h1 className=\"text-center\">{t(\"Login\")}</h1>\n            <form>\n                <Input name={\"username\"} label={t(\"Username\")} onChange={(event:any) => setUsername(event.target.value)} />\n                <Input name={\"password\"} label={t(\"Password\")} onChange={(event:any) => setPassword(event.target.value)} type={\"password\"} />\n                <ButtonWithLoading onClick={onClick} disabled={disableLogin} text={t(\"Login\")} pendingApiCall={pendingApiCall} error={error} />\n            </form>\n\n        </div>\n    )\n\n}\n\nexport default LoginPage;\n"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,eAA/B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,iBAAT,QAAkC,qBAAlC;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAgB;EAAA;;EAE9B;EACA,MAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBR,QAAQ,EAAvC;EACA,MAAM,CAACS,QAAD,EAAUC,WAAV,IAAyBV,QAAQ,EAAvC;EACA,MAAM,CAACW,KAAD,EAAOC,QAAP,IAAiBZ,QAAQ,EAA/B;EACA,MAAMa,cAAc,GAAGX,cAAc,CAAC,eAAD,CAArC;EACA,MAAM;IAACY;EAAD,IAAMjB,cAAc,EAA1B;EACA,MAAMkB,QAAQ,GAAGZ,WAAW,EAA5B;EAEAJ,SAAS,CAAC,MAAI;IACVa,QAAQ,CAACI,SAAD,CAAR;EACH,CAFQ,EAEP,CAACT,QAAD,EAAUE,QAAV,CAFO,CAAT;;EAKA,MAAMQ,OAAO,GAAG,MAAOC,KAAP,IAAsB;IAClCA,KAAK,CAACC,cAAN;IACAP,QAAQ,CAACI,SAAD,CAAR;IACA,MAAM;MAAEI;IAAF,IAAcd,KAApB;IACA,MAAMe,IAAI,GAAG;MACTd,QADS;MAETE;IAFS,CAAb;;IAIA,IAAI;MACA,MAAMa,GAAG,GAAG,MAAMP,QAAQ,CAACX,iBAAiB,CAACiB,IAAD,CAAlB,CAA1B;MACA;MACAD,OAAO,CAACG,IAAR,CAAa,GAAb;IAEH,CALD,CAKE,OAAOC,GAAP,EAAiB;MACf;MACAC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACAZ,QAAQ,CAACY,GAAG,CAACG,QAAJ,CAAaC,IAAb,CAAkBC,OAAnB,CAAR;IACH;EACJ,CAlBD;;EAoBA,MAAMC,YAAY,GAAG,EAAEvB,QAAQ,IAAIE,QAAd,KAA2BI,cAAhD;EAEA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,wBACI;MAAI,SAAS,EAAC,aAAd;MAAA,UAA6BC,CAAC,CAAC,OAAD;IAA9B;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,wBACI,QAAC,KAAD;QAAO,IAAI,EAAE,UAAb;QAAyB,KAAK,EAAEA,CAAC,CAAC,UAAD,CAAjC;QAA+C,QAAQ,EAAGI,KAAD,IAAeV,WAAW,CAACU,KAAK,CAACa,MAAN,CAAaC,KAAd;MAAnF;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,KAAD;QAAO,IAAI,EAAE,UAAb;QAAyB,KAAK,EAAElB,CAAC,CAAC,UAAD,CAAjC;QAA+C,QAAQ,EAAGI,KAAD,IAAeR,WAAW,CAACQ,KAAK,CAACa,MAAN,CAAaC,KAAd,CAAnF;QAAyG,IAAI,EAAE;MAA/G;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI,QAAC,iBAAD;QAAmB,OAAO,EAAEf,OAA5B;QAAqC,QAAQ,EAAEa,YAA/C;QAA6D,IAAI,EAAEhB,CAAC,CAAC,OAAD,CAApE;QAA+E,cAAc,EAAED,cAA/F;QAA+G,KAAK,EAAEF;MAAtH;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CAjDD;;GAAMN,S;UAMqBH,c,EACXL,c,EACKM,W;;;KARfE,S;AAmDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}