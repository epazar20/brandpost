{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nexport const useApiProgress = (apiMethod, path) => {\n  _s();\n\n  const [pendingApiCall, setPendingApiCall] = useState(false);\n\n  const updateState = (method, url, status) => {\n    if (url.startsWith(path) && method === apiMethod) {\n      setPendingApiCall(status);\n    }\n  };\n\n  useEffect(() => {\n    const requestId = axios.interceptors.request.use(request => {\n      const {\n        method,\n        url\n      } = request;\n      updateState(method, url, true);\n      return request;\n    });\n    const responseId = axios.interceptors.response.use(response => {\n      const {\n        method,\n        url\n      } = response.config;\n      updateState(method, url, false);\n      return response;\n    }, error => {\n      const {\n        method,\n        url\n      } = error.config;\n      updateState(method, url, false);\n      throw error;\n    });\n    return () => {\n      axios.interceptors.request.eject(requestId);\n      axios.interceptors.response.eject(responseId);\n    };\n  }, [path]);\n  return pendingApiCall;\n};\n\n_s(useApiProgress, \"dxeikoFXtsTGpF/7CQdkmajlavs=\");","map":{"version":3,"names":["axios","useEffect","useState","useApiProgress","apiMethod","path","pendingApiCall","setPendingApiCall","updateState","method","url","status","startsWith","requestId","interceptors","request","use","responseId","response","config","error","eject"],"sources":["/Users/epazar/Documents/workspace/UI/frontend/src/common/ApiProgress.tsx"],"sourcesContent":["import axios, { AxiosRequestConfig } from 'axios';\nimport { useEffect, useState } from 'react';\n\nexport const useApiProgress = (apiMethod:string ,path: string) => {\n\n    const [pendingApiCall, setPendingApiCall] = useState(false);\n\n    const updateState = (method:string ,url: string, status: boolean): void => {\n        if (url.startsWith(path) && method === apiMethod) {\n            setPendingApiCall(status);\n        }\n    }\n\n    useEffect(() => {\n        const requestId = axios.interceptors.request.use((request: AxiosRequestConfig) => {\n            const {method,url} = request;\n            updateState(method!,url!,true);\n            return request;\n        });\n\n        const responseId = axios.interceptors.response.use((response) => {\n            const {method,url} = response.config;\n            updateState(method!,url!,false);\n            return response;\n\n        }, (error) => {\n            const {method,url} = error.config;\n            updateState(method!,url!,false);            \n            throw error;\n        });\n        return () => {\n            axios.interceptors.request.eject(requestId);\n            axios.interceptors.response.eject(responseId);\n        }\n\n    },[path]);\n\n    return pendingApiCall;\n}\n\n\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAP,MAA0C,OAA1C;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,SAAD,EAAmBC,IAAnB,KAAoC;EAAA;;EAE9D,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,KAAD,CAApD;;EAEA,MAAMM,WAAW,GAAG,CAACC,MAAD,EAAgBC,GAAhB,EAA6BC,MAA7B,KAAuD;IACvE,IAAID,GAAG,CAACE,UAAJ,CAAeP,IAAf,KAAwBI,MAAM,KAAKL,SAAvC,EAAkD;MAC9CG,iBAAiB,CAACI,MAAD,CAAjB;IACH;EACJ,CAJD;;EAMAV,SAAS,CAAC,MAAM;IACZ,MAAMY,SAAS,GAAGb,KAAK,CAACc,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgCD,OAAD,IAAiC;MAC9E,MAAM;QAACN,MAAD;QAAQC;MAAR,IAAeK,OAArB;MACAP,WAAW,CAACC,MAAD,EAASC,GAAT,EAAc,IAAd,CAAX;MACA,OAAOK,OAAP;IACH,CAJiB,CAAlB;IAMA,MAAME,UAAU,GAAGjB,KAAK,CAACc,YAAN,CAAmBI,QAAnB,CAA4BF,GAA5B,CAAiCE,QAAD,IAAc;MAC7D,MAAM;QAACT,MAAD;QAAQC;MAAR,IAAeQ,QAAQ,CAACC,MAA9B;MACAX,WAAW,CAACC,MAAD,EAASC,GAAT,EAAc,KAAd,CAAX;MACA,OAAOQ,QAAP;IAEH,CALkB,EAKfE,KAAD,IAAW;MACV,MAAM;QAACX,MAAD;QAAQC;MAAR,IAAeU,KAAK,CAACD,MAA3B;MACAX,WAAW,CAACC,MAAD,EAASC,GAAT,EAAc,KAAd,CAAX;MACA,MAAMU,KAAN;IACH,CATkB,CAAnB;IAUA,OAAO,MAAM;MACTpB,KAAK,CAACc,YAAN,CAAmBC,OAAnB,CAA2BM,KAA3B,CAAiCR,SAAjC;MACAb,KAAK,CAACc,YAAN,CAAmBI,QAAnB,CAA4BG,KAA5B,CAAkCJ,UAAlC;IACH,CAHD;EAKH,CAtBQ,EAsBP,CAACZ,IAAD,CAtBO,CAAT;EAwBA,OAAOC,cAAP;AACH,CAnCM;;GAAMH,c"},"metadata":{},"sourceType":"module"}