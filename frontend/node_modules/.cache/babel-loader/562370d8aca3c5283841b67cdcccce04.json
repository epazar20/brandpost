{"ast":null,"code":"var _jsxFileName = \"/Users/epazar/Documents/workspace/UI/frontend/src/common/ApiProgress.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { Component, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useApiProgress = path => {\n  _s();\n\n  const [pendingApiCall, setPendingApiCall] = useState(false);\n\n  const updateState = (url, status) => {\n    if (path === url) {\n      setPendingApiCall(status);\n    }\n  };\n\n  useEffect(() => {\n    axios.interceptors.request.use(request => {\n      updateState(request.url, true);\n      return request;\n    });\n    axios.interceptors.response.use(response => {\n      updateState(response.config.url, false);\n      return response;\n    }, error => {\n      updateState(error.config.url, false);\n      throw error;\n    });\n  });\n  return pendingApiCall;\n};\n\n_s(useApiProgress, \"dxeikoFXtsTGpF/7CQdkmajlavs=\");\n\nexport function withApiProgress(WrappedComponent, path) {\n  return class ApiProgress extends Component {\n    constructor() {\n      super(...arguments);\n      this.state = {\n        pendingApiCall: false,\n        reId: 0,\n        resId: 0\n      };\n\n      this.updateState = (url, durum) => {\n        if (path && url === path) {\n          this.setState({\n            pendingApiCall: durum\n          });\n        }\n      };\n    }\n\n    componentDidMount() {\n      this.state.reId = axios.interceptors.request.use(request => {\n        console.log(\"cnt: \" + path);\n        this.updateState(request.url, true);\n        return request;\n      });\n      this.state.resId = axios.interceptors.response.use(response => {\n        this.updateState(response.config.url, false);\n        return response;\n      }, er => {\n        this.updateState(er.config.url, false);\n        throw er;\n      });\n    }\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.state.reId);\n      axios.interceptors.response.eject(this.state.resId);\n    }\n\n    render() {\n      const {\n        pendingApiCall\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(WrappedComponent, {\n          pendingApiCall: pendingApiCall,\n          ...this.props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this);\n    }\n\n  };\n}","map":{"version":3,"names":["axios","React","Component","useEffect","useState","useApiProgress","path","pendingApiCall","setPendingApiCall","updateState","url","status","interceptors","request","use","response","config","error","withApiProgress","WrappedComponent","ApiProgress","state","reId","resId","durum","setState","componentDidMount","console","log","er","componentWillUnmount","eject","render","props"],"sources":["/Users/epazar/Documents/workspace/UI/frontend/src/common/ApiProgress.tsx"],"sourcesContent":["import axios, { AxiosRequestConfig } from 'axios';\nimport React, { Component, useEffect, useState } from 'react';\n\nconst useApiProgress = (path: string) => {\n\n    const [pendingApiCall, setPendingApiCall] = useState(false);\n\n    const updateState = (url: string, status: boolean): void => {\n        if (path === url) {\n            setPendingApiCall(status);\n        }\n\n    }\n\n    useEffect(() => {\n\n        axios.interceptors.request.use((request: AxiosRequestConfig) => {\n            updateState(request.url!,true);\n            return request;\n        });\n\n        axios.interceptors.response.use((response) => {\n            updateState(response.config.url!,false);\n            return response;\n\n        }, (error) => {\n            updateState(error.config.url!,false);\n            throw error;\n        });\n\n    });\n\n\n\n\n\n    return pendingApiCall;\n}\n\n\n\n\n\n\n\n\nexport function withApiProgress(WrappedComponent: any, path: string) {\n    return class ApiProgress extends Component<any, any> {\n\n\n        state = {\n            pendingApiCall: false,\n            reId: 0,\n            resId: 0\n        }\n\n        updateState = (url: string, durum: boolean) => {\n\n            if (path && url === path) {\n                this.setState({\n                    pendingApiCall: durum\n                });\n            }\n        }\n\n\n        componentDidMount() {\n\n            this.state.reId = axios.interceptors.request.use((request) => {\n                console.log(\"cnt: \" + path);\n                this.updateState(request.url!, true);\n                return request;\n            });\n\n            this.state.resId = axios.interceptors.response.use((response) => {\n                this.updateState(response.config.url!, false);\n                return response;\n            }, (er) => {\n                this.updateState(er.config.url!, false);\n                throw er;\n            })\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.state.reId);\n            axios.interceptors.response.eject(this.state.resId);\n        }\n\n\n        render() {\n\n            const { pendingApiCall } = this.state as any;\n            return (\n                <div>\n\n                    <WrappedComponent pendingApiCall={pendingApiCall} {...this.props} />\n\n                    {/* {React.cloneElement(this.props.children, { pendingApiCall: this.state.pendingApiCall })} */}\n                </div>\n            );\n        }\n    }\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}