{"ast":null,"code":"import { login } from \"../api/ApiCalls\";\nimport * as constant from \"./constants\";\nexport const logoutAction = {\n  type: constant.LOGOUT_SUCCESS\n};\nexport const loginSuccessAction = payload => {\n  return {\n    type: constant.LOGIN_SUCCESS,\n    payload\n  };\n};\nexport const loginPendingAction = () => {\n  return {\n    type: constant.LOGIN_SUCCESS\n  };\n};\nexport const loginErrorAction = payload => {\n  return {\n    type: constant.LOGIN_ERROR,\n    payload\n  };\n};\nexport const loginHandleAction = async cred => {\n  return async dispatch => {\n    try {\n      dispatch(loginPendingAction());\n      const res = await login(cred);\n      const authState = { ...res.data,\n        password: cred.password\n      };\n      dispatch(loginSuccessAction(authState));\n      return res;\n    } catch (error) {\n      dispatch(loginErrorAction(error));\n      throw error;\n    }\n  };\n};","map":{"version":3,"names":["login","constant","logoutAction","type","LOGOUT_SUCCESS","loginSuccessAction","payload","LOGIN_SUCCESS","loginPendingAction","loginErrorAction","LOGIN_ERROR","loginHandleAction","cred","dispatch","res","authState","data","password","error"],"sources":["/Users/epazar/Documents/workspace/UI/frontend/src/redux/authAction.tsx"],"sourcesContent":["import { login } from \"../api/ApiCalls\"\nimport * as constant from \"./constants\"\n\nexport const logoutAction = {\n    type: constant.LOGOUT_SUCCESS\n}\n\nexport const loginSuccessAction = (payload: any) => {\n    return {\n        type: constant.LOGIN_SUCCESS,\n        payload\n    }\n}\n\nexport const loginPendingAction = () => {\n    return {\n        type: constant.LOGIN_SUCCESS\n        }\n}\n\nexport const loginErrorAction = (payload:any) => {\n    return {\n        type: constant.LOGIN_ERROR,\n        payload\n        }\n}\n\n\nexport const loginHandleAction = async (cred: any) => {\n\n    return async (dispatch:any) => {\n\n        try {\n            dispatch(loginPendingAction());\n            const res: any = await login(cred);\n            const authState = {\n                ...res.data,\n                password: cred.password\n            }\n            dispatch(loginSuccessAction(authState));\n            return res;\n            \n        } catch (error) {\n            dispatch(loginErrorAction(error));\n            throw error;\n        }\n    }\n}\n"],"mappings":"AAAA,SAASA,KAAT,QAAsB,iBAAtB;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;AAEA,OAAO,MAAMC,YAAY,GAAG;EACxBC,IAAI,EAAEF,QAAQ,CAACG;AADS,CAArB;AAIP,OAAO,MAAMC,kBAAkB,GAAIC,OAAD,IAAkB;EAChD,OAAO;IACHH,IAAI,EAAEF,QAAQ,CAACM,aADZ;IAEHD;EAFG,CAAP;AAIH,CALM;AAOP,OAAO,MAAME,kBAAkB,GAAG,MAAM;EACpC,OAAO;IACHL,IAAI,EAAEF,QAAQ,CAACM;EADZ,CAAP;AAGH,CAJM;AAMP,OAAO,MAAME,gBAAgB,GAAIH,OAAD,IAAiB;EAC7C,OAAO;IACHH,IAAI,EAAEF,QAAQ,CAACS,WADZ;IAEHJ;EAFG,CAAP;AAIH,CALM;AAQP,OAAO,MAAMK,iBAAiB,GAAG,MAAOC,IAAP,IAAqB;EAElD,OAAO,MAAOC,QAAP,IAAwB;IAE3B,IAAI;MACAA,QAAQ,CAACL,kBAAkB,EAAnB,CAAR;MACA,MAAMM,GAAQ,GAAG,MAAMd,KAAK,CAACY,IAAD,CAA5B;MACA,MAAMG,SAAS,GAAG,EACd,GAAGD,GAAG,CAACE,IADO;QAEdC,QAAQ,EAAEL,IAAI,CAACK;MAFD,CAAlB;MAIAJ,QAAQ,CAACR,kBAAkB,CAACU,SAAD,CAAnB,CAAR;MACA,OAAOD,GAAP;IAEH,CAVD,CAUE,OAAOI,KAAP,EAAc;MACZL,QAAQ,CAACJ,gBAAgB,CAACS,KAAD,CAAjB,CAAR;MACA,MAAMA,KAAN;IACH;EACJ,CAhBD;AAiBH,CAnBM"},"metadata":{},"sourceType":"module"}