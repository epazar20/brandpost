{"ast":null,"code":"var _jsxFileName = \"/Users/epazar/Documents/workspace/UI/frontend/src/component/UserFeed.tsx\",\n    _s = $RefreshSig$();\n\nimport { t } from 'i18next';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { sendFeedApi } from '../api/ApiCalls';\nimport { useApiProgress } from '../common/ApiProgress';\nimport ButtonWithLoading from './ButtonWithLoading';\nimport ProfileImage from './ProfileImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserFeed = () => {\n  _s();\n\n  const {\n    image\n  } = useSelector(store => {\n    return {\n      image: store.image\n    };\n  });\n  const [focused, setFocused] = useState(false);\n  const [feed, setFeed] = useState(\"\");\n  const pendingApiCall = useApiProgress(\"post\", \"api/1.0/feed\");\n  const feedRef = useRef(null);\n  useEffect(() => {\n    const feedTracker = event => {\n      console.log(event.target);\n\n      if (feedRef.current && !feedRef.current.contains(event.target)) {\n        setFocused(false);\n      }\n    };\n\n    document.addEventListener(\"click\", feedTracker);\n    return () => {\n      document.removeEventListener(\"click\", feedTracker);\n    };\n  });\n\n  const sendFeed = async () => {\n    try {\n      const data = {\n        content: feed\n      };\n      const response = await sendFeedApi(data);\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card p-1 flex-row\",\n    ref: feedRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-1\",\n      children: /*#__PURE__*/_jsxDEV(ProfileImage, {\n        imageDb: image,\n        width: 32\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"form-control\",\n      rows: focused ? 3 : 1,\n      value: feed,\n      onFocus: () => {\n        setFocused(true);\n      } //onBlur={() => { setFocused(false) }}\n      ,\n      onChange: event => {\n        setFeed(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), focused && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-1\",\n      children: /*#__PURE__*/_jsxDEV(ButtonWithLoading, {\n        onClick: sendFeed,\n        disabled: pendingApiCall,\n        pendingApiCall: pendingApiCall,\n        text: t(\"Send\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserFeed, \"hDQIKc8mAwwhoip2fHvQkPd56/A=\", false, function () {\n  return [useSelector, useApiProgress];\n});\n\n_c = UserFeed;\nexport default UserFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserFeed\");","map":{"version":3,"names":["t","React","useEffect","useRef","useState","useSelector","sendFeedApi","useApiProgress","ButtonWithLoading","ProfileImage","UserFeed","image","store","focused","setFocused","feed","setFeed","pendingApiCall","feedRef","feedTracker","event","console","log","target","current","contains","document","addEventListener","removeEventListener","sendFeed","data","content","response","error","value"],"sources":["/Users/epazar/Documents/workspace/UI/frontend/src/component/UserFeed.tsx"],"sourcesContent":["import { t } from 'i18next';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { sendFeedApi } from '../api/ApiCalls';\nimport { useApiProgress } from '../common/ApiProgress';\nimport ButtonWithLoading from './ButtonWithLoading';\nimport ProfileImage from './ProfileImage';\n\nconst UserFeed = () => {\n\n\n    const { image } = useSelector((store: any) => {\n        return { image: store.image }\n    })\n    const [focused, setFocused] = useState(false);\n    const [feed, setFeed] = useState(\"\");\n    const pendingApiCall = useApiProgress(\"post\", \"api/1.0/feed\");\n    const feedRef = useRef(null);\n\n    useEffect(() => {\n\n\n        const feedTracker = (event: any) => {\n            console.log(event.target);\n            if(feedRef.current && !(feedRef.current as any).contains(event.target)){\n                setFocused(false);\n            }\n        }\n\n        document.addEventListener(\"click\", feedTracker);\n\n        return () => {\n            document.removeEventListener(\"click\", feedTracker);\n        }\n\n    })\n\n    const sendFeed = async () => {\n        try {\n            const data = {\n                content: feed\n            }\n            const response = await sendFeedApi(data)\n        } catch (error) {\n        }\n    }\n\n\n    return (\n        <div className='card p-1 flex-row' ref={feedRef} >\n            <div className='m-1'>\n                <ProfileImage imageDb={image} width={32} />\n            </div>\n            <textarea\n                className='form-control'\n                rows={focused ? 3 : 1}\n                value={feed}\n                onFocus={() => { setFocused(true) }}\n                //onBlur={() => { setFocused(false) }}\n                onChange={(event: any) => { setFeed(event.target.value) }}\n            ></textarea>\n            {focused && <div className='m-1'>\n                <ButtonWithLoading onClick={sendFeed} disabled={pendingApiCall} pendingApiCall={pendingApiCall} text={t(\"Send\")} />\n            </div>}\n\n        </div>\n    );\n};\n\nexport default UserFeed;"],"mappings":";;;AAAA,SAASA,CAAT,QAAkB,SAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAGnB,MAAM;IAAEC;EAAF,IAAYN,WAAW,CAAEO,KAAD,IAAgB;IAC1C,OAAO;MAAED,KAAK,EAAEC,KAAK,CAACD;IAAf,CAAP;EACH,CAF4B,CAA7B;EAGA,MAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAMa,cAAc,GAAGV,cAAc,CAAC,MAAD,EAAS,cAAT,CAArC;EACA,MAAMW,OAAO,GAAGf,MAAM,CAAC,IAAD,CAAtB;EAEAD,SAAS,CAAC,MAAM;IAGZ,MAAMiB,WAAW,GAAIC,KAAD,IAAgB;MAChCC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;;MACA,IAAGL,OAAO,CAACM,OAAR,IAAmB,CAAEN,OAAO,CAACM,OAAT,CAAyBC,QAAzB,CAAkCL,KAAK,CAACG,MAAxC,CAAvB,EAAuE;QACnET,UAAU,CAAC,KAAD,CAAV;MACH;IACJ,CALD;;IAOAY,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCR,WAAnC;IAEA,OAAO,MAAM;MACTO,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCT,WAAtC;IACH,CAFD;EAIH,CAhBQ,CAAT;;EAkBA,MAAMU,QAAQ,GAAG,YAAY;IACzB,IAAI;MACA,MAAMC,IAAI,GAAG;QACTC,OAAO,EAAEhB;MADA,CAAb;MAGA,MAAMiB,QAAQ,GAAG,MAAM1B,WAAW,CAACwB,IAAD,CAAlC;IACH,CALD,CAKE,OAAOG,KAAP,EAAc,CACf;EACJ,CARD;;EAWA,oBACI;IAAK,SAAS,EAAC,mBAAf;IAAmC,GAAG,EAAEf,OAAxC;IAAA,wBACI;MAAK,SAAS,EAAC,KAAf;MAAA,uBACI,QAAC,YAAD;QAAc,OAAO,EAAEP,KAAvB;QAA8B,KAAK,EAAE;MAArC;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MACI,SAAS,EAAC,cADd;MAEI,IAAI,EAAEE,OAAO,GAAG,CAAH,GAAO,CAFxB;MAGI,KAAK,EAAEE,IAHX;MAII,OAAO,EAAE,MAAM;QAAED,UAAU,CAAC,IAAD,CAAV;MAAkB,CAJvC,CAKI;MALJ;MAMI,QAAQ,EAAGM,KAAD,IAAgB;QAAEJ,OAAO,CAACI,KAAK,CAACG,MAAN,CAAaW,KAAd,CAAP;MAA6B;IAN7D;MAAA;MAAA;MAAA;IAAA,QAJJ,EAYKrB,OAAO,iBAAI;MAAK,SAAS,EAAC,KAAf;MAAA,uBACR,QAAC,iBAAD;QAAmB,OAAO,EAAEgB,QAA5B;QAAsC,QAAQ,EAAEZ,cAAhD;QAAgE,cAAc,EAAEA,cAAhF;QAAgG,IAAI,EAAEjB,CAAC,CAAC,MAAD;MAAvG;QAAA;QAAA;QAAA;MAAA;IADQ;MAAA;MAAA;MAAA;IAAA,QAZhB;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH,CA3DD;;GAAMU,Q;UAGgBL,W,EAKKE,c;;;KARrBG,Q;AA6DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}