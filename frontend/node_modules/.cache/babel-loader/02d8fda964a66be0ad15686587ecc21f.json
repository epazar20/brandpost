{"ast":null,"code":"var _jsxFileName = \"/Users/epazar/Documents/workspace/UI/frontend/src/common/ApiProgress.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { Component, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useApiProgress = path => {\n  _s();\n\n  const [pendingApiCall, setPendingApiCall] = useState(false);\n  return pendingApiCall;\n};\n\n_s(useApiProgress, \"ISTdUP6Q0tgs5sBGIVhAINOf2Ro=\");\n\nexport function withApiProgress(WrappedComponent, path) {\n  return class ApiProgress extends Component {\n    constructor() {\n      super(...arguments);\n      this.state = {\n        pendingApiCall: false,\n        reId: 0,\n        resId: 0\n      };\n\n      this.updateState = (url, durum) => {\n        if (path && url === path) {\n          this.setState({\n            pendingApiCall: durum\n          });\n        }\n      };\n    }\n\n    componentDidMount() {\n      this.state.reId = axios.interceptors.request.use(request => {\n        console.log(\"cnt: \" + path);\n        this.updateState(request.url, true);\n        return request;\n      });\n      this.state.resId = axios.interceptors.response.use(response => {\n        this.updateState(response.config.url, false);\n        return response;\n      }, er => {\n        this.updateState(er.config.url, false);\n        throw er;\n      });\n    }\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.state.reId);\n      axios.interceptors.response.eject(this.state.resId);\n    }\n\n    render() {\n      const {\n        pendingApiCall\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(WrappedComponent, {\n          pendingApiCall: pendingApiCall,\n          ...this.props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this);\n    }\n\n  };\n}","map":{"version":3,"names":["axios","React","Component","useState","useApiProgress","path","pendingApiCall","setPendingApiCall","withApiProgress","WrappedComponent","ApiProgress","state","reId","resId","updateState","url","durum","setState","componentDidMount","interceptors","request","use","console","log","response","config","er","componentWillUnmount","eject","render","props"],"sources":["/Users/epazar/Documents/workspace/UI/frontend/src/common/ApiProgress.tsx"],"sourcesContent":["import axios from 'axios';\nimport React, { Component, useState } from 'react';\n\nconst useApiProgress = (path: string) => {\n\n    const [pendingApiCall, setPendingApiCall] = useState(false);\n\n\n\n\n\n\n    return pendingApiCall;\n}\n\n\n\n\n\n\n\n\nexport function withApiProgress(WrappedComponent: any, path: string) {\n    return class ApiProgress extends Component<any, any> {\n\n\n        state = {\n            pendingApiCall: false,\n            reId: 0,\n            resId: 0\n        }\n\n        updateState = (url: string, durum: boolean) => {\n\n            if (path && url === path) {\n                this.setState({\n                    pendingApiCall: durum\n                });\n            }\n        }\n\n\n        componentDidMount() {\n\n            this.state.reId = axios.interceptors.request.use((request) => {\n                console.log(\"cnt: \" + path);\n                this.updateState(request.url!, true);\n                return request;\n            });\n\n            this.state.resId = axios.interceptors.response.use((response) => {\n                this.updateState(response.config.url!, false);\n                return response;\n            }, (er) => {\n                this.updateState(er.config.url!, false);\n                throw er;\n            })\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.state.reId);\n            axios.interceptors.response.eject(this.state.resId);\n        }\n\n\n        render() {\n\n            const { pendingApiCall } = this.state as any;\n            return (\n                <div>\n\n                    <WrappedComponent pendingApiCall={pendingApiCall} {...this.props} />\n\n                    {/* {React.cloneElement(this.props.children, { pendingApiCall: this.state.pendingApiCall })} */}\n                </div>\n            );\n        }\n    }\n}\n\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,cAAc,GAAIC,IAAD,IAAkB;EAAA;;EAErC,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAAC,KAAD,CAApD;EAOA,OAAOG,cAAP;AACH,CAVD;;GAAMF,c;;AAmBN,OAAO,SAASI,eAAT,CAAyBC,gBAAzB,EAAgDJ,IAAhD,EAA8D;EACjE,OAAO,MAAMK,WAAN,SAA0BR,SAA1B,CAA8C;IAAA;MAAA;MAAA,KAGjDS,KAHiD,GAGzC;QACJL,cAAc,EAAE,KADZ;QAEJM,IAAI,EAAE,CAFF;QAGJC,KAAK,EAAE;MAHH,CAHyC;;MAAA,KASjDC,WATiD,GASnC,CAACC,GAAD,EAAcC,KAAd,KAAiC;QAE3C,IAAIX,IAAI,IAAIU,GAAG,KAAKV,IAApB,EAA0B;UACtB,KAAKY,QAAL,CAAc;YACVX,cAAc,EAAEU;UADN,CAAd;QAGH;MACJ,CAhBgD;IAAA;;IAmBjDE,iBAAiB,GAAG;MAEhB,KAAKP,KAAL,CAAWC,IAAX,GAAkBZ,KAAK,CAACmB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgCD,OAAD,IAAa;QAC1DE,OAAO,CAACC,GAAR,CAAY,UAAUlB,IAAtB;QACA,KAAKS,WAAL,CAAiBM,OAAO,CAACL,GAAzB,EAA+B,IAA/B;QACA,OAAOK,OAAP;MACH,CAJiB,CAAlB;MAMA,KAAKT,KAAL,CAAWE,KAAX,GAAmBb,KAAK,CAACmB,YAAN,CAAmBK,QAAnB,CAA4BH,GAA5B,CAAiCG,QAAD,IAAc;QAC7D,KAAKV,WAAL,CAAiBU,QAAQ,CAACC,MAAT,CAAgBV,GAAjC,EAAuC,KAAvC;QACA,OAAOS,QAAP;MACH,CAHkB,EAGfE,EAAD,IAAQ;QACP,KAAKZ,WAAL,CAAiBY,EAAE,CAACD,MAAH,CAAUV,GAA3B,EAAiC,KAAjC;QACA,MAAMW,EAAN;MACH,CANkB,CAAnB;IAOH;;IAEDC,oBAAoB,GAAG;MACnB3B,KAAK,CAACmB,YAAN,CAAmBC,OAAnB,CAA2BQ,KAA3B,CAAiC,KAAKjB,KAAL,CAAWC,IAA5C;MACAZ,KAAK,CAACmB,YAAN,CAAmBK,QAAnB,CAA4BI,KAA5B,CAAkC,KAAKjB,KAAL,CAAWE,KAA7C;IACH;;IAGDgB,MAAM,GAAG;MAEL,MAAM;QAAEvB;MAAF,IAAqB,KAAKK,KAAhC;MACA,oBACI;QAAA,uBAEI,QAAC,gBAAD;UAAkB,cAAc,EAAEL,cAAlC;UAAA,GAAsD,KAAKwB;QAA3D;UAAA;UAAA;UAAA;QAAA;MAFJ;QAAA;QAAA;QAAA;MAAA,QADJ;IAQH;;EArDgD,CAArD;AAuDH"},"metadata":{},"sourceType":"module"}