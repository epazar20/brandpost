{"ast":null,"code":"var _jsxFileName = \"/Users/epazar/Documents/workspace/UI/frontend/src/pages/LoginPage.tsx\";\nimport { withTranslation } from \"react-i18next\";\nimport Input from \"../component/Input\";\nimport React from \"react\";\nimport { login } from \"../api/ApiCalls\";\nimport ButtonWithLoading from \"../component/ButtonWithLoading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginPage extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      username: null,\n      password: null,\n      error: null\n    };\n\n    this.onChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value,\n        error: null\n      });\n    };\n\n    this.onClick = async event => {\n      event.preventDefault();\n      this.setState({\n        error: null\n      });\n      const {\n        username,\n        password\n      } = this.state;\n      const cred = {\n        username,\n        password\n      };\n\n      try {\n        const res = await login(cred);\n      } catch (err) {\n        this.setState({\n          error: err.response.data.message\n        });\n      }\n    };\n\n    this.onChangeLanguage = lang => {\n      const errors = {};\n      this.setState({\n        errors\n      });\n      const {\n        i18n\n      } = this.props;\n      i18n.changeLanguage(lang);\n    };\n  }\n\n  render() {\n    const {\n      t,\n      pendingApiCall\n    } = this.props;\n    const {\n      username,\n      password,\n      error\n    } = this.state;\n    const enableLogin = !Boolean(username && password) && pendingApiCall;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: t(\"Login\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          name: \"username\",\n          label: t(\"Username\"),\n          onChange: this.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"password\",\n          label: t(\"Password\"),\n          onChange: this.onChange,\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonWithLoading, {\n          onClick: this.onClick,\n          disabled: enableLogin,\n          text: t(\"Login\"),\n          pendingApiCall: pendingApiCall,\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withTranslation()(LoginPage);","map":{"version":3,"names":["withTranslation","Input","React","login","ButtonWithLoading","LoginPage","Component","state","username","password","error","onChange","event","name","value","target","setState","onClick","preventDefault","cred","res","err","response","data","message","onChangeLanguage","lang","errors","i18n","props","changeLanguage","render","t","pendingApiCall","enableLogin","Boolean"],"sources":["/Users/epazar/Documents/workspace/UI/frontend/src/pages/LoginPage.tsx"],"sourcesContent":["import { withTranslation } from \"react-i18next\";\nimport Input from \"../component/Input\";\nimport React from \"react\";\nimport { login } from \"../api/ApiCalls\";\nimport ButtonWithLoading from \"../component/ButtonWithLoading\";\n\nclass LoginPage extends React.Component {\n\n    state = {\n        username: null,\n        password: null,\n        error: null,\n    }\n\n\n    onChange = (event: any) => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value,\n            error: null\n        });\n    }\n\n    onClick = async (event: any) => {\n        event.preventDefault();\n        this.setState({ error: null });\n        const { username, password } = this.state;\n        const cred = {\n            username,\n            password\n        }\n        try {\n            const res = await login(cred);\n        } catch (err) {\n            this.setState({\n                error: (err as any).response.data.message\n            });\n\n        }\n    }\n\n    onChangeLanguage = (lang: any) => {\n        const errors = {};\n        this.setState({ errors });\n        const { i18n } = this.props as any;\n        i18n.changeLanguage(lang);\n    }\n\n    render() {\n        const { t, pendingApiCall } = this.props as any;\n        const { username, password, error} = this.state;\n\n        const enableLogin = !Boolean(username && password) && pendingApiCall;\n\n        return (\n            <div className=\"container\">\n                <h1 className=\"text-center\">{t(\"Login\")}</h1>\n                <form>\n                    <Input name={\"username\"} label={t(\"Username\")} onChange={this.onChange} />\n                    <Input name={\"password\"} label={t(\"Password\")} onChange={this.onChange} type={\"password\"} />\n                    <ButtonWithLoading onClick={this.onClick} disabled={enableLogin} text={t(\"Login\")} pendingApiCall={pendingApiCall} error={error}/>\n                </form>\n\n            </div>\n        )\n    }\n}\n\nexport default withTranslation()(LoginPage);"],"mappings":";AAAA,SAASA,eAAT,QAAgC,eAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;EAAA;IAAA;IAAA,KAEpCC,KAFoC,GAE5B;MACJC,QAAQ,EAAE,IADN;MAEJC,QAAQ,EAAE,IAFN;MAGJC,KAAK,EAAE;IAHH,CAF4B;;IAAA,KASpCC,QAToC,GASxBC,KAAD,IAAgB;MACvB,MAAM;QAAEC,IAAF;QAAQC;MAAR,IAAkBF,KAAK,CAACG,MAA9B;MACA,KAAKC,QAAL,CAAc;QACV,CAACH,IAAD,GAAQC,KADE;QAEVJ,KAAK,EAAE;MAFG,CAAd;IAIH,CAfmC;;IAAA,KAiBpCO,OAjBoC,GAiB1B,MAAOL,KAAP,IAAsB;MAC5BA,KAAK,CAACM,cAAN;MACA,KAAKF,QAAL,CAAc;QAAEN,KAAK,EAAE;MAAT,CAAd;MACA,MAAM;QAAEF,QAAF;QAAYC;MAAZ,IAAyB,KAAKF,KAApC;MACA,MAAMY,IAAI,GAAG;QACTX,QADS;QAETC;MAFS,CAAb;;MAIA,IAAI;QACA,MAAMW,GAAG,GAAG,MAAMjB,KAAK,CAACgB,IAAD,CAAvB;MACH,CAFD,CAEE,OAAOE,GAAP,EAAY;QACV,KAAKL,QAAL,CAAc;UACVN,KAAK,EAAGW,GAAD,CAAaC,QAAb,CAAsBC,IAAtB,CAA2BC;QADxB,CAAd;MAIH;IACJ,CAjCmC;;IAAA,KAmCpCC,gBAnCoC,GAmChBC,IAAD,IAAe;MAC9B,MAAMC,MAAM,GAAG,EAAf;MACA,KAAKX,QAAL,CAAc;QAAEW;MAAF,CAAd;MACA,MAAM;QAAEC;MAAF,IAAW,KAAKC,KAAtB;MACAD,IAAI,CAACE,cAAL,CAAoBJ,IAApB;IACH,CAxCmC;EAAA;;EA0CpCK,MAAM,GAAG;IACL,MAAM;MAAEC,CAAF;MAAKC;IAAL,IAAwB,KAAKJ,KAAnC;IACA,MAAM;MAAErB,QAAF;MAAYC,QAAZ;MAAsBC;IAAtB,IAA+B,KAAKH,KAA1C;IAEA,MAAM2B,WAAW,GAAG,CAACC,OAAO,CAAC3B,QAAQ,IAAIC,QAAb,CAAR,IAAkCwB,cAAtD;IAEA,oBACI;MAAK,SAAS,EAAC,WAAf;MAAA,wBACI;QAAI,SAAS,EAAC,aAAd;QAAA,UAA6BD,CAAC,CAAC,OAAD;MAA9B;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,wBACI,QAAC,KAAD;UAAO,IAAI,EAAE,UAAb;UAAyB,KAAK,EAAEA,CAAC,CAAC,UAAD,CAAjC;UAA+C,QAAQ,EAAE,KAAKrB;QAA9D;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,KAAD;UAAO,IAAI,EAAE,UAAb;UAAyB,KAAK,EAAEqB,CAAC,CAAC,UAAD,CAAjC;UAA+C,QAAQ,EAAE,KAAKrB,QAA9D;UAAwE,IAAI,EAAE;QAA9E;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI,QAAC,iBAAD;UAAmB,OAAO,EAAE,KAAKM,OAAjC;UAA0C,QAAQ,EAAEiB,WAApD;UAAiE,IAAI,EAAEF,CAAC,CAAC,OAAD,CAAxE;UAAmF,cAAc,EAAEC,cAAnG;UAAmH,KAAK,EAAEvB;QAA1H;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAWH;;AA3DmC;;AA8DxC,eAAeV,eAAe,GAAGK,SAAH,CAA9B"},"metadata":{},"sourceType":"module"}